
### JLS-01 

The JSON-library project CI executes on each pull request (opened, reopened, synchronized) the integration test suite, and failures in these runs are investigated by contributors.


**Supported Requests:**

- [TA-VALIDATION](TA.md#ta-validation)

**Supporting Items:**

_None_



**References:**

_None_



**Fallacies:**

_None_


---

### JLS-02 

Fuzz testing is used in the original nlohmann/json repository (https://github.com/nlohmann/json) to uncover edge cases and failure modes throughout development. (https://github.com/nlohmann/json/blob/develop/tests/fuzzing.md)


**Supported Requests:**

- [TA-MISBEHAVIOURS](TA.md#ta-misbehaviours)

**Supporting Items:**

_None_



**References:**

- `website: https://introspector.cdoss-fuzz.com/project-profile?project=json`


`https://introspector.cdoss-fuzz.com/project-profile?project=json`
	- collects recent reports for fuzzing introspection of nlohmann/json with historical plots


- `website: https://raw.githubusercontent.com/nlohmann/json/refs/heads/develop/.github/workflows/cifuzz.yml`


`https://raw.githubusercontent.com/nlohmann/json/refs/heads/develop/.github/workflows/cifuzz.yml`
	- Configuration file for Fuzz-Testing pipeline in the original nlohmann/json repository





**Fallacies:**

_None_


---

### JLS-03 

Automated tests are reviewed by a Subject Matter Expert to verify they test the properties they claim to.


**Supported Requests:**

- [TA-BEHAVIOURS](TA.md#ta-behaviours)

**Supporting Items:**

_None_



**References:**

_None_



**Fallacies:**

_None_


---

### JLS-04 

The project runs dependabot on all code entering the main branch, blocking merges until all warnings are resolved. (https://github.com/score-json/json/blob/main/nlohmann_json/.github/dependabot.yml)


**Supported Requests:**

- [TA-FIXES](TA.md#ta-fixes)
- [TA-INPUTS](TA.md#ta-inputs)

**Supporting Items:**

_None_



**References:**

- `.github/dependabot.yml`


````yaml
version: 2
updates:
  - package-ecosystem: github-actions
    directory: /
    schedule:
      interval: daily

  - package-ecosystem: pip
    directory: /docs/mkdocs
    schedule:
      interval: daily

  - package-ecosystem: pip
    directory: /tools/astyle
    schedule:
      interval: daily

  - package-ecosystem: pip
    directory: /tools/generate_natvis
    schedule:
      interval: daily

  - package-ecosystem: pip
    directory: /tools/serve_header
    schedule:
      interval: daily

  - package-ecosystem: pip
    directory: /cmake/requirements
    schedule:
      interval: daily

````





**Fallacies:**

_None_


---

### JLS-05 

The OSS nlohmann_json is widely used, actively maintained and uses github issues to track bugs and misbehaviours.


**Supported Requests:**

- [TA-FIXES](TA.md#ta-fixes)

**Supporting Items:**

_None_



**References:**

- `website: https://github.com/nlohmann/json/issues`


`https://github.com/nlohmann/json/issues`
	- contains the collected github-issues for nlohmann/json


- `website: https://github.com/nlohmann/json/graphs/commit-activity`


`https://github.com/nlohmann/json/graphs/commit-activity`
	- presents the commit activity of the past year


- `website: https://github.com/nlohmann/json/graphs/contributors`


`https://github.com/nlohmann/json/graphs/contributors`
	- presents commits over time and per contributor


- `website: https://github.com/nlohmann/json/forks?include=active&page=1&period=&sort_by=last_updated`


`https://github.com/nlohmann/json/forks?include=active&page=1&period=&sort_by=last_updated`
	- lists all forks of nlohmann/json by last updated





**Fallacies:**

_None_


---

### JLS-06 

Changes to the code (main branch) are applied only after code review and passing of all pipelines.


**Supported Requests:**

- [TA-UPDATES](TA.md#ta-updates)

**Supporting Items:**

_None_



**References:**

- `website: https://github.com/score-json/json/settings/branches`


`https://github.com/score-json/json/settings/branches`




**Fallacies:**

_None_


---

### JLS-07 

Main branch is protected, i.e. no direct commits are possible.


**Supported Requests:**

- [TA-UPDATES](TA.md#ta-updates)

**Supporting Items:**

_None_



**References:**

_None_



**Fallacies:**

_None_


---

### JLS-08 

Each statement is scored based on SME reviews or automatic validation functions. (TODO)


**Supported Requests:**

- [TA-CONFIDENCE](TA.md#ta-confidence)

**Supporting Items:**

_None_



**References:**

_None_



**Fallacies:**

_None_


---

### JLS-09 

Scores are reasonably, systematically and repeatably accumulated. (TODO)


**Supported Requests:**

- [TA-CONFIDENCE](TA.md#ta-confidence)

**Supporting Items:**

_None_



**References:**

_None_



**Fallacies:**

_None_


---

### JLS-10 

Every release includes source code, build instructions, tests and attestations. (TODO: Test result summary)


**Supported Requests:**

- [TA-ITERATIONS](TA.md#ta-iterations)

**Supporting Items:**

_None_



**References:**

_None_



**Fallacies:**

_None_


---

### JLS-11 

A score based on outstanding, fixed and mitigated faults is calculated based on github issues in nlohmann/json. (TODO)


**Supported Requests:**

- [TA-FIXES](TA.md#ta-fixes)

**Supporting Items:**

_None_



**References:**

_None_



**Fallacies:**

_None_


---

### JLS-12 

The S-Core change process management is followed.


**Supported Requests:**

- [TA-UPDATES](TA.md#ta-updates)

**Supporting Items:**

_None_



**References:**

- `website: https://eclipse-score.github.io/process_description/main/process_areas/change_management/index.html`


`https://eclipse-score.github.io/process_description/main/process_areas/change_management/index.html`
	- Documentation of S-CORE change process management





**Fallacies:**

_None_


---

### JLS-13 

The S-Core methodologies are followed.


**Supported Requests:**

- [TA-METHODOLOGIES](TA.md#ta-methodologies)

**Supporting Items:**

_None_



**References:**

- `website: https://eclipse-score.github.io/process_description/main/general_concepts/score_review_concept.html`


`https://eclipse-score.github.io/process_description/main/general_concepts/score_review_concept.html`
	- Documentation of S-CORE methodologies





**Fallacies:**

_None_


---

### JLS-14 

The builds are repeatable (i.e. different builds lead to the same SHA value). (TODO)


**Supported Requests:**

- [TA-RELEASES](TA.md#ta-releases)

**Supporting Items:**

_None_



**References:**

_None_



**Fallacies:**

_None_


---

### JLS-16 

A list of tests, which is extracted from the test execution, is provided, along with a list of test environments. (TODO)


**Supported Requests:**

- [TA-TESTS](TA.md#ta-tests)

**Supporting Items:**

_None_



**References:**

_None_



**Fallacies:**

_None_


---

### JLS-17 

A github workflow calculates the fraction of expectations covered by tests (TODO).


**Supported Requests:**

- [TA-ANALYSIS](TA.md#ta-analysis)

**Supporting Items:**

_None_



**References:**

_None_



**Fallacies:**

_None_


---

### JLS-18 

Results from tests are accurately captured. (TODO)


**Supported Requests:**

- [TA-DATA](TA.md#ta-data)

**Supporting Items:**

_None_



**References:**

_None_



**Fallacies:**

_None_


---

### JLS-19 

All components, dependencies and tools are listed in a manifest.


**Supported Requests:**

- [TA-ITERATIONS](TA.md#ta-iterations)

**Supporting Items:**

_None_



**References:**

_None_



**Fallacies:**

_None_


---

### JLS-20 

A github workflow saves the history of scores in the trustable graph to derive trends. (TODO)


**Supported Requests:**

- [TA-CONFIDENCE](TA.md#ta-confidence)

**Supporting Items:**

_None_



**References:**

_None_



**Fallacies:**

_None_


---

### JLS-21 

A score is calculated based on the number of mirrored and unmirrored things. (TODO)


**Supported Requests:**

- [TA-RELEASES](TA.md#ta-releases)

**Supporting Items:**

_None_



**References:**

_None_



**Fallacies:**

_None_


---

### JLS-22 

The github workflow executes the unit tests daily and saves the results as time-series data. (TODO)


**Supported Requests:**

- [TA-VALIDATION](TA.md#ta-validation)

**Supporting Items:**

_None_



**References:**

_None_



**Fallacies:**

_None_


---

### JLS-23 

The eclipse s-core organization mirrors the nlohmann_json library in a fork.


**Supported Requests:**

- [TA-SUPPLY_CHAIN](TA.md#ta-supply_chain)

**Supporting Items:**

_None_



**References:**

_None_



**Fallacies:**

_None_


---

### JLS-24 

The JSON library recognizes malformed JSON and returns an exception.


**Supported Requests:**

- [TA-MISBEHAVIOURS](TA.md#ta-misbehaviours)

**Supporting Items:**

- [NPF-07.2](NPF.md#npf-07.2)
- [TIJ-01](TIJ.md#tij-01)
- [TIJ-02](TIJ.md#tij-02)
- [TIJ-03](TIJ.md#tij-03)
- [TIJ-04](TIJ.md#tij-04)
- [TIJ-05](TIJ.md#tij-05)
- [TIJ-06](TIJ.md#tij-06)



**References:**

_None_



**Fallacies:**

_None_


---

### JLS-25 

Malicious code changes are mitigated by code reviews, adhering to Eclipse S-core contribution procedures and vigilance from the open-source community.


**Supported Requests:**

- [TA-MISBEHAVIOURS](TA.md#ta-misbehaviours)

**Supporting Items:**

_None_



**References:**

_None_



**Fallacies:**

_None_


---

### JLS-26 

Pipeline execution results are analyzed in the fork and the original nlohmann_json repository.


**Supported Requests:**

- [TA-ANALYSIS](TA.md#ta-analysis)

**Supporting Items:**

_None_



**References:**

_None_



**Fallacies:**

_None_
